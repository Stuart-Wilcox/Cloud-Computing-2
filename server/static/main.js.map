{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/charges/charges.component.css","webpack:///./src/app/charges/charges.component.html","webpack:///./src/app/charges/charges.component.ts","webpack:///./src/app/create-vm/create-vm.component.css","webpack:///./src/app/create-vm/create-vm.component.html","webpack:///./src/app/create-vm/create-vm.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/usage.service.ts","webpack:///./src/app/services/vm.service.ts","webpack:///./src/app/start-vm/start-vm.component.css","webpack:///./src/app/start-vm/start-vm.component.html","webpack:///./src/app/start-vm/start-vm.component.ts","webpack:///./src/app/stop-vm/stop-vm.component.css","webpack:///./src/app/stop-vm/stop-vm.component.html","webpack:///./src/app/stop-vm/stop-vm.component.ts","webpack:///./src/app/usage/usage.component.css","webpack:///./src/app/usage/usage.component.html","webpack:///./src/app/usage/usage.component.ts","webpack:///./src/app/view-vm/view-vm.component.css","webpack:///./src/app/view-vm/view-vm.component.html","webpack:///./src/app/view-vm/view-vm.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ViewVmComponent } from './view-vm/view-vm.component';\nimport { CreateVmComponent } from './create-vm/create-vm.component';\nimport { StartVmComponent } from './start-vm/start-vm.component';\nimport { StopVmComponent } from './stop-vm/stop-vm.component';\nimport { UsageComponent } from './usage/usage.component';\nimport { ChargesComponent } from './charges/charges.component';\nimport {RegisterComponent} from './register/register.component';\n\n\nimport { AuthGuardService as AuthGuard} from './services/auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'view-vm/:id',\n    component: ViewVmComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'create-vm',\n    component: CreateVmComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'start-vm/:id',\n    component: StartVmComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'stop-vm/:id',\n    component: StopVmComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'usage/:id',\n    component: UsageComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'charges',\n    component: ChargesComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    /* MAKE SURE THIS ONE IS LAST IN THE LIST */\n    path: '**',\n    redirectTo: '',\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- <button mat-button>Basic</button>\\n<button mat-button color=\\\"primary\\\">Primary</button>\\n\\n<button mat-raised-button>Basic</button>\\n<button mat-raised-button color=\\\"primary\\\">Primary</button>\\n\\n<br><br>\\n\\n<form>\\n  <mat-form-field style='display:block;'>\\n    <input matInput placeholder=\\\"Favorite food\\\" value=\\\"Sushi\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field style='display:block;'>\\n    <textarea matInput placeholder=\\\"Leave a comment\\\"></textarea>\\n  </mat-form-field>\\n</form> -->\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input'; \n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { MaterialModule } from './material/material.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { CreateVmComponent } from './create-vm/create-vm.component';\nimport { StartVmComponent } from './start-vm/start-vm.component';\nimport { StopVmComponent } from './stop-vm/stop-vm.component';\nimport { ChargesComponent } from './charges/charges.component';\nimport { UsageComponent } from './usage/usage.component';\nimport { ViewVmComponent } from './view-vm/view-vm.component';\nimport { RegisterComponent } from './register/register.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    LoginComponent,\n    CreateVmComponent,\n    StartVmComponent,\n    StopVmComponent,\n    ChargesComponent,\n    UsageComponent,\n    ViewVmComponent,\n    RegisterComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MaterialModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJnZXMvY2hhcmdlcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<section *ngIf=\\\"loading\\\">\\n  <mat-spinner></mat-spinner>\\n</section>\\n<section *ngIf=\\\"!loading\\\"> \\n\\t<p> Charges </p>\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-charges',\n  templateUrl: './charges.component.html',\n  styleUrls: ['./charges.component.css']\n})\nexport class ChargesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".optionList {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n  align-items: center;\\n}\\n\\n.container{\\n  padding: 20px;\\n}\\n\\n.optionListItem {\\n  display: inline-block;\\n  height: inherit !important;\\n  align-items: center;\\n  margin-bottom: 10px;\\n}\\n\\n.optionCard:hover {\\n  box-shadow: 0px 0px 10px #000;\\n}\\n\\n.example-radio-group {\\n  display: inline-flex;\\n  flex-direction: column;\\n}\\n\\n.example-radio-button {\\n  margin: 5px;\\n}\\n\\n.example-selected-value {\\n  margin: 15px 0;\\n}\\n\\n.example-card {\\n  margin-top: 20px;\\n  max-width: 400px;\\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.btn-width{\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlLXZtL2NyZWF0ZS12bS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQiwyQkFBMkI7RUFDM0IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUNBO0VBQ0UscUJBQXFCO0VBQ3JCLDBCQUEwQjtFQUMxQixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS12bS9jcmVhdGUtdm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vcHRpb25MaXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uY29udGFpbmVye1xuICBwYWRkaW5nOiAyMHB4O1xufVxuLm9wdGlvbkxpc3RJdGVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IGluaGVyaXQgIWltcG9ydGFudDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLm9wdGlvbkNhcmQ6aG92ZXIge1xuICBib3gtc2hhZG93OiAwcHggMHB4IDEwcHggIzAwMDtcbn1cblxuLmV4YW1wbGUtcmFkaW8tZ3JvdXAge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmV4YW1wbGUtcmFkaW8tYnV0dG9uIHtcbiAgbWFyZ2luOiA1cHg7XG59XG5cbi5leGFtcGxlLXNlbGVjdGVkLXZhbHVlIHtcbiAgbWFyZ2luOiAxNXB4IDA7XG59XG5cbi5leGFtcGxlLWNhcmQge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXgtd2lkdGg6IDQwMHB4O1xufVxuXG4uZXhhbXBsZS1mb3JtIHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICBtaW4td2lkdGg6IDE1MHB4O1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmJ0bi13aWR0aHtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn0iXX0= */\"","module.exports = \"<section *ngIf=\\\"loading\\\">\\n  <mat-spinner></mat-spinner>\\n</section>\\n<section class = \\\"container\\\">\\n  <!-- Display \\\"this.vms\\\" options here, get a name and type to create new vm for the user -->\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"VM Name\\\" [(ngModel)]=\\\"name\\\">\\n  </mat-form-field>\\n  <p>Select VM Type: </p>\\n  <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"type\\\">\\n    <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let vm of vms\\\" [value]=\\\"vm.type\\\">\\n      {{vm.type}} | {{vm.processorCores}} processor cores | {{vm.virtualRam}} GB virtual RAM |\\n       {{vm.storageSpace}} GB storage space | {{vm.price}} cents/minute\\n    </mat-radio-button>\\n  </mat-radio-group>\\n  <mat-card class=\\\"example-card\\\">\\n    <mat-card-title>VM Name: {{name}}</mat-card-title>\\n    <mat-card-title>VM Type: {{type}}</mat-card-title>\\n  </mat-card>\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"btn-width\\\" (click)=\\\"createVM()\\\">Create VM</button>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatSnackBar} from '@angular/material';\n\nimport { VM } from '@models/VM';\nimport { VMService } from '@services/vm.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-vm',\n  templateUrl: './create-vm.component.html',\n  styleUrls: ['./create-vm.component.css']\n})\nexport class CreateVmComponent implements OnInit {\n  public loading: boolean;\n  public error: Error;\n  public name: string;\n  public type: string;\n  private vms: VM[];\n\n  constructor(private router: Router, public vmService: VMService, private snackBar: MatSnackBar) {\n    this.vms = [];\n    this.error = null;\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.vmService.getOfferings().then(vms => {\n      this.loading = false;\n      this.vms = vms;\n    });\n  }\n\n  createVM(){\n    if(this.name && this.type){\n      this.loading = true;\n      this.vmService.createVM(this.name, this.type).then(vm => {\n        this.loading = false;\n        this.snackBar.open(\"VM Created Successfully.\", '', {duration: 1000});\n        this.name = null;\n        this.type = null;\n        this.router.navigate(['/dashboard']);\n      }).catch(err => {\n        this.loading = false;\n        this.snackBar.open(\"VM Creation Failed.\", '', {duration: 1000});\n        this.error = err;\n      });\n    } else {\n      this.snackBar.open(\"Ensure all the fields are filled.\", '', {duration: 1000});\n    }\n  }\n}\n","module.exports = \".hoverable:hover {\\n  box-shadow: 0px 0px 10px #000;\\n}\\n\\n.list {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.listitem {\\n  display: inline-block;\\n  height: inherit !important;\\n}\\n\\n.listitemcard {\\n  margin-bottom: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQiwwQkFBMEI7QUFDNUI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG92ZXJhYmxlOmhvdmVyIHtcbiAgYm94LXNoYWRvdzogMHB4IDBweCAxMHB4ICMwMDA7XG59XG5cbi5saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmxpc3RpdGVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IGluaGVyaXQgIWltcG9ydGFudDtcbn1cblxuLmxpc3RpdGVtY2FyZCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<h1>\\n  Dashboard\\n</h1>\\n\\n<section *ngIf=\\\"loading\\\">\\n  <mat-spinner></mat-spinner>\\n</section>\\n<section *ngIf=\\\"!loading\\\">\\n  <h3>My VMs</h3>\\n  <mat-list class=\\\"list\\\">\\n    <mat-list-item class=\\\"listitem\\\">\\n      <a [routerLink]=\\\"['/create-vm']\\\" style=\\\"text-decoration:none;\\\">\\n      <mat-card class=\\\"hoverable listitemcard\\\">\\n        <mat-card-header>\\n          <mat-card-title>Create VM</mat-card-title>\\n          <mat-icon>add_to_queue</mat-icon>\\n        </mat-card-header>\\n      </mat-card>\\n      </a>\\n    </mat-list-item>\\n    <mat-list-item *ngFor=\\\"let vm of vms\\\" class=\\\"listitem\\\">\\n      <a [routerLink]=\\\"['/view-vm', vm._id]\\\" style=\\\"text-decoration:none;\\\">\\n      <mat-card class=\\\"hoverable listitemcard\\\">\\n        <mat-card-header>\\n          <mat-card-title>{{vm.name}}</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <mat-list>\\n            <mat-list-item>\\n              <p>Processor Cores: {{vm.processorCores}}<p>\\n            </mat-list-item>\\n            <mat-list-item>\\n              <p>Virtual RAM: {{vm.virtualRam}}GB<p>\\n            </mat-list-item>\\n            <mat-list-item>\\n              <p>Storage Space: {{vm.storageSpace}}GB<p>\\n            </mat-list-item>\\n            <mat-list-item>\\n              <p>Price: {{vm.price}} cents per minute<p>\\n            </mat-list-item>\\n          </mat-list>\\n        </mat-card-content>\\n      </mat-card>\\n      </a>\\n    </mat-list-item>\\n  </mat-list>\\n</section>\\n\\n<!-- <ul>\\n  <li>\\n    <a [routerLink]=\\\"['/create-vm']\\\">Create VM</a>\\n  </li>\\n  <li>\\n    <a [routerLink]=\\\"['/delete-vm', '0']\\\">Delete VM</a>\\n  </li>\\n  <li>\\n    <a [routerLink]=\\\"['/start-vm', '0']\\\">Start VM</a>\\n  </li>\\n  <li>\\n    <a [routerLink]=\\\"['/stop-vm', '0']\\\">Stop VM</a>\\n  </li>\\n  <li>\\n    <a [routerLink]=\\\"['/upgrade-vm', '0']\\\">Upgrade VM</a>\\n  </li>\\n  <li>\\n    <a [routerLink]=\\\"['/downgrade-vm', '0']\\\">Downgrade VM</a>\\n  </li>\\n  <li>\\n    <a [routerLink]=\\\"['/usage', '0']\\\">VM Usage</a>\\n  </li>\\n  <li>\\n    <a [routerLink]=\\\"['/charges']\\\">Charges</a>\\n  </li>\\n</ul> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from  '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { VM } from '@models/VM';\nimport { VMService } from '@services/vm.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  public vms: VM[];\n  public loading: boolean;\n\n  constructor(public vmService: VMService) {\n    this.vms = [];\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.vmService.getVMs().then(vms => {\n      this.vms = vms;\n      this.loading = false;\n    });\n  }\n}\n","module.exports = \".center{\\n    text-align: center;\\n}\\nspan{\\n    padding-left: 10px;\\n}\\n.maxWidth{\\n    max-width: 400px;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbnNwYW57XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufVxuLm1heFdpZHRoe1xuICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufSJdfQ== */\"","module.exports = \"<h1 class=\\\"center\\\">SE4455 Assignment 2: Resource Usage Agent Login Page</h1>\\n\\n<mat-card class=\\\"maxWidth\\\">\\n  <mat-card-header class=\\\"center\\\">\\n      <mat-card-title >Login</mat-card-title>\\n      <mat-card-subtitle *ngIf=\\\"loginError\\\" style=\\\"background-color:#f44336;color:#fff;padding-left:10px;padding-right:10px;margin-top:10px;\\\">\\n        Invalid username/password\\n        <button mat-icon-button (click)=\\\"dismiss()\\\">\\n          <mat-icon>close</mat-icon>\\n        </button>\\n      </mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content class=\\\"center\\\">\\n    <form> \\n      <table cellspacing=\\\"0\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field >\\n              <input matInput autofocus placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" (keyup.enter)=\\\"login()\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td><mat-form-field>\\n            <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" (keyup.enter)=\\\"login()\\\" required>\\n          </mat-form-field></td>\\n        </tr></table>\\n    </form>\\n    <mat-spinner *ngIf=\\\"loading\\\"></mat-spinner>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\n      <span></span>\\n      <a [routerLink]=\\\"['/register']\\\"><button mat-raised-button color=\\\"primary\\\">Register</button></a>\\n    </mat-card-actions>\\n</mat-card>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { AuthService } from '@services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public username: string;\n  public password: string;\n\n  public loginError: boolean;\n  public loading: boolean;\n\n  constructor(private router: Router, public authService: AuthService) {\n    this.username = null;\n    this.password = null;\n\n    this.loginError = false;\n    this.loading = false;\n  }\n\n  ngOnInit() {\n  }\n\n  dismiss() {\n    this.loginError = false;\n  }\n\n  login() {\n    // this.loading = true;\n    this.authService\n    .login(this.username, this.password)\n    .then(result => {\n      this.loading = false;\n      this.router.navigate(['/dashboard']);\n    }).catch(err => {\n      this.loading = false;\n      this.loginError = true;\n      console.error(err);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n\n  MatCardModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatListModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatTreeModule,\n\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatBadgeModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatRippleModule,\n\n  MatBottomSheetModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatTooltipModule,\n\n  MatPaginatorModule,\n  MatSortModule,\n  MatTableModule,\n} from '@angular/material';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    \n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n  ],\n  exports: [\n    BrowserAnimationsModule,\n\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n  ]\n})\nexport class MaterialModule { }\n","module.exports = \"ul {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n    overflow: hidden;\\n    background-color: #333;\\n}\\n\\nli {\\n    float: left;\\n}\\n\\nli a {\\n    display: block;\\n    color: white;\\n    text-align: center;\\n    padding: 12px 14px;\\n    text-decoration: none;\\n}\\n\\n/* Change the link color to #111 (black) on hover */\\n\\nli a:hover {\\n    background-color: #111;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixxQkFBcUI7QUFDekI7O0FBRUEsbURBQW1EOztBQUNuRDtJQUNJLHNCQUFzQjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInVsIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG5saSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG59XG5cbmxpIGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMTJweCAxNHB4O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLyogQ2hhbmdlIHRoZSBsaW5rIGNvbG9yIHRvICMxMTEgKGJsYWNrKSBvbiBob3ZlciAqL1xubGkgYTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzExMTtcbn0iXX0= */\"","module.exports = \"<ul>\\n  <li><a [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n  <li><a [routerLink]=\\\"['/create-vm']\\\">Create VMs</a></li>\\n\\n  \\n  <li style=\\\"float:right\\\"><a class=\\\"active\\\" (click)=\\\"onLogoutClick()\\\">logout</a></li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { AuthService } from '@services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n  onLogoutClick() {\n    this.authService.logout().then(() => {\n      this.router.navigate(['/login']);\n    });\n  }\n}\n","module.exports = \".maxWidth{\\n    max-width: 400px;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n.center{\\n    text-align: center;\\n}\\nspan{\\n    padding-left: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF4V2lkdGh7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4uY2VudGVye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbnNwYW57XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufSJdfQ== */\"","module.exports = \"<h1 class=\\\"center\\\">SE4455 Assignment 2: Resource Usage Agent Register Page</h1>\\n\\n<mat-card class=\\\"maxWidth\\\">\\n    <mat-card-header>\\n        <mat-card-title>Register</mat-card-title>\\n        <mat-card-subtitle *ngIf=\\\"loginError\\\" style=\\\"background-color:#f44336;color:#fff;padding-left:10px;padding-right:10px;margin-top:10px;\\\">\\n            Invalid username/password\\n            <button mat-icon-button (click)=\\\"dismiss()\\\">\\n            <mat-icon>close</mat-icon>\\n            </button>\\n        </mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-content>\\n        <form>\\n            <table cellspacing=\\\"0\\\">\\n            <tr>\\n                <td>\\n                <mat-form-field>\\n                <input matInput autofocus placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" (keyup.enter)=\\\"login()\\\" required>\\n                </mat-form-field>\\n                </td>\\n            </tr>\\n            <tr>\\n            <td><mat-form-field>\\n                <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" (keyup.enter)=\\\"login()\\\" required>\\n            </mat-form-field></td>\\n            </tr></table>\\n        </form>\\n        <mat-spinner *ngIf=\\\"loading\\\"></mat-spinner>\\n        </mat-card-content>\\n    <mat-card-actions>\\n        <button mat-raised-button (click)=\\\"register()\\\" color=\\\"primary\\\">Register</button>\\n        <span></span>\\n        <a [routerLink]=\\\"['/']\\\"><button mat-raised-button color=\\\"primary\\\">Login</button></a>\\n    </mat-card-actions>\\n</mat-card>\\n    \\n      \"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { AuthService } from '@services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  err: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n    ) { this.err = ''; }\n\n\n    ngOnInit() {\n  }\n\n\n   register() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    };\n\n    if (this.username === '' || this.password === '') {\n      this.err = 'Please fill in all fields';\n      return false;\n    }\n\n    // Register user\n    this.authService.register(this.username, this.password).then(result => {\n      this.router.navigate(['/']);\n    }).catch(err => {\n      this.err = 'Something went wrong';\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {\n  }\n\n  canActivate(): boolean  {\n    if (!this.auth.isAuthenticated) {\n      this.router.navigate(['']); // navigate to login\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,  HttpHeaders } from '@angular/common/http';\n\nconst EXPIRY = 5*(1000*60*60); // 5 hour expiry\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public isAuthenticated: boolean;\n  private accessToken: string;\n\n  constructor(private http: HttpClient) {\n    this.isAuthenticated = false;\n    this.accessToken = null;\n\n    let storedToken = window.sessionStorage.getItem('x-access-token');\n    let storedTokenTimestamp = parseInt(window.sessionStorage.getItem('x-access-token-timestamp'));\n    if(storedToken && storedTokenTimestamp && storedTokenTimestamp + EXPIRY > new Date().getTime()){\n      this.accessToken = storedToken;\n      this.isAuthenticated = true;\n    }\n    if(storedTokenTimestamp + EXPIRY < new Date().getTime()){\n      // token expired\n      window.sessionStorage.removeItem('x-access-token');\n      window.sessionStorage.removeItem('x-access-token-timestamp');\n    }\n  }\n\n  public async logout(): Promise<any> {\n    this.isAuthenticated = false;\n    this.accessToken = null;\n    window.sessionStorage.removeItem('x-access-token');\n    window.sessionStorage.removeItem('x-access-token-timestamp');\n  }\n\n  public async login(username, password): Promise<any> {\n    return this.http\n    .post(`/public-api/login`, { username, password })\n    .toPromise()\n    .then(response => {\n      if (!response['token']) { throw new Error('No token provided'); }\n      this.isAuthenticated = true;\n      this.accessToken = response['token'];\n\n      window.sessionStorage.setItem('x-access-token', this.accessToken);\n      window.sessionStorage.setItem('x-access-token-timestamp', new Date().getTime().toString())\n      return true;\n    });\n  }\n\n  public async register(username, password): Promise<any> {\n    this.http\n    .post(`/public-api/register`, { username, password })\n    .toPromise()\n    .then(response => {\n      console.log(response);\n      return response;\n    })\n    .catch(err => {\n      console.error(err);\n      throw err;\n    });\n  }\n\n  public getHttpHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'x-access-token': this.accessToken,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AuthService } from '@services/auth.service';\nimport { Event } from '@models/Event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsageService {\n\n  constructor(private http: HttpClient, private auth: AuthService) { }\n\n  async getUsage(id: string): Promise<any> {\n    return this\n      .http\n      .get<any>(`/api/vm/usage?id=${id}`, {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n\n  async addEvent(event: Event): Promise<any> {\n    return this\n      .http\n      .post<any>(`/usage?id=${event.vmId}`, event, {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AuthService } from '@services/auth.service';\nimport { VM } from '@models/VM';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VMService {\n\n  constructor(private http: HttpClient, private auth: AuthService) { }\n\n  async getOfferings(): Promise<VM[]> {\n    return this\n      .http\n      .get<VM[]>('/api/vm/offerings', {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n\n  async getVMs(): Promise<VM[]> {\n    return this\n      .http\n      .get<VM[]>('/api/vm', {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n\n  async getVM(id: string): Promise<VM> {\n    return this\n      .http\n      .get<VM>(`/api/vm?id=${id}`, {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n\n  async createVM(name: string, type: string): Promise<VM> {\n    return this\n      .http\n      .post<VM>('/api/vm', { name, type }, {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n\n  async deleteVM(id: string): Promise<any> {\n    return this\n      .http\n      .delete<any>(`/api/vm?id=${id}`, {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n\n  async upgradeVM(id: string): Promise<any> {\n    return this\n      .http\n      .post<any>(`/api/vm/upgrade?id=${id}`, {}, {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n\n  async downgradeVM(id: string): Promise<any> {\n    return this\n      .http\n      .post<any>(`/api/vm/downgrade?id=${id}`, {}, {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n\n  async startVM(id: string): Promise<any> {\n    return this\n      .http\n      .post<any>(`/api/vm/start?id=${id}`, {}, {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n\n  async stopVM(id: string): Promise<any> {\n    return this\n      .http\n      .post<any>(`api/vm/stop?id=${id}`, {}, {headers: this.auth.getHttpHeaders()})\n      .toPromise();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXJ0LXZtL3N0YXJ0LXZtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<section *ngIf=\\\"loading\\\">\\n  <mat-spinner></mat-spinner>\\n</section>\\n<section *ngIf=\\\"!loading\\\">\\n  <p>\\n    start-vm works!\\n  </p>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { VMService } from '@services/vm.service';\nimport { VM } from '@models/VM';\n\n@Component({\n  selector: 'app-start-vm',\n  templateUrl: './start-vm.component.html',\n  styleUrls: ['./start-vm.component.css']\n})\nexport class StartVmComponent implements OnInit {\n  public loading: boolean;\n  public error: Error;\n  private vm: VM;\n  public id: string;\n\n  constructor(private route: ActivatedRoute, public vmService: VMService) {\n    this.id = '';\n    this.vm = null;\n    this.error = null;\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.vmService.getVM(this.id).then(vm => {\n        this.vm = vm\n        this.loading = false;\n      }).catch(err => {\n        this.loading = false;\n        this.error = err;\n      });\n    });\n  }\n\n  startVM(){\n    this.loading = true;\n    this.vmService.startVM(this.id).then(() => {\n      this.loading = false;\n      // maybe redirect to url=`/view-vm/${this.id}`\n    }).catch(err => {\n      this.loading = false;\n      this.error = err;\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b3Atdm0vc3RvcC12bS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<section *ngIf=\\\"loading\\\">\\n  <mat-spinner></mat-spinner>\\n</section>\\n<section *ngIf=\\\"!loading\\\">\\n  <p>\\n    stop-vm works!\\n  </p>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { VMService } from '@services/vm.service';\nimport { VM } from '@models/VM';\n\n@Component({\n  selector: 'app-stop-vm',\n  templateUrl: './stop-vm.component.html',\n  styleUrls: ['./stop-vm.component.css']\n})\nexport class StopVmComponent implements OnInit {\n  public loading: boolean;\n  public error: Error;\n  private vm: VM;\n  public id: string;\n\n  constructor(private route: ActivatedRoute, public vmService: VMService) {\n    this.id = '';\n    this.vm = null;\n    this.error = null;\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.vmService.getVM(this.id).then(vm => {\n        this.vm = vm;\n        this.loading = false;\n      }).catch(err => {\n        this.loading = false;\n        this.error = err;\n      });\n    });\n  }\n\n  stopVM(){\n    this.loading = true;\n    this.vmService.stopVM(this.id).then(() => {\n      this.loading = false;\n      // maybe redirect to url=`/view-vm/${this.id}`\n    }).catch(err => {\n      this.loading = false;\n      this.error = err;\n    })\n  }\n}\n","module.exports = \".header {\\n\\tjustify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNhZ2UvdXNhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLHVCQUF1QjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL3VzYWdlL3VzYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyIHtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59Il19 */\"","module.exports = \"\\n\\n<section *ngIf=\\\"loading\\\">\\n  <mat-spinner></mat-spinner>\\n</section>\\n<section *ngIf=\\\"!loading\\\" class=\\\"mainBody\\\">\\n\\t<mat-card *ngIf=\\\"vm\\\">\\n\\t\\t<mat-card-header class = \\\"header\\\">\\n\\t      <mat-card-title><h1>Usage for {{vm.name}}</h1></mat-card-title> \\n\\t    </mat-card-header>\\n\\n\\t    <mat-card-content>\\n\\t\\t<mat-divider></mat-divider>\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-card-subtitle><h2>Plan</h2></mat-card-subtitle> \\n\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t<mat-list-item>\\t{{vm.processorCores}} Cores</mat-list-item>\\n\\t\\t\\t\\t\\t<mat-list-item>\\t{{vm.virtualRam}} GB RAM</mat-list-item>\\n\\t\\t\\t\\t\\t<mat-list-item>\\t{{vm.storageSpace}} GB Memory</mat-list-item>\\n\\t\\t\\t\\t\\t<mat-list-item>\\t{{vm.price}} ¢/min</mat-list-item>\\n\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t\\t<mat-divider></mat-divider>\\n\\t\\t\\t\\t<mat-card-subtitle><h2>Total</h2></mat-card-subtitle>\\n\\t\\t\\t\\t<mat-card-content *ngIf=\\\"usage\\\">\\n\\t\\t\\t\\t\\t<div>$ {{usage.cost}} </div>\\n\\t\\t\\t\\t</mat-card-content>\\n\\n\\t\\t\\t\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { UsageService } from '@services/usage.service';\nimport { VMService } from '@services/vm.service';\nimport { VM } from '@models/VM';\n\n\n@Component({\n  selector: 'app-usage',\n  templateUrl: './usage.component.html',\n  styleUrls: ['./usage.component.css']\n})\nexport class UsageComponent implements OnInit {\n  private vm: VM;\n  public loading: boolean;\n  public error: Error;\n  public id: string;\n  private usage: any;\n\n  constructor(private route: ActivatedRoute, public usageService: UsageService, public vmService: VMService) {\n    this.id = '';\n    this.vm = null;\n    this.usage = null;\n    this.error = null;\n  }\n\n  ngOnInit() {\n    this.loading = true;\n\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n\n      this.vmService.getVM(this.id).then(vm => {\n        this.vm = vm;\n        this.loading = false;\n      }).catch(err => {\n        this.loading = false;\n        this.error = err;\n      });\n\n      // Using vmService since UsageService doesnt seem to be implemented\n      this.usageService.getUsage(this.id).then(usage => {\n        this.usage = usage;\n        this.loading = false;\n      }).catch(err => {\n        this.loading = false;\n        this.error = err;\n      });\n\n    });\n  }\n}\n","module.exports = \"button {\\n  margin-right: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlldy12bS92aWV3LXZtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC92aWV3LXZtL3ZpZXctdm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbiB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbiJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<section *ngIf=\\\"loading\\\">\\n  <mat-spinner></mat-spinner>\\n</section>\\n<section *ngIf=\\\"!loading\\\">\\n  <mat-card *ngIf=\\\"vm\\\">\\n    <mat-card-header>\\n      <mat-card-title>{{vm.name}}</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <mat-list>\\n        <mat-list-item>\\n          <p>Processor Cores: {{vm.processorCores}}<p>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <p>Virtual RAM: {{vm.virtualRam}}GB<p>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <p>Storage Space: {{vm.storageSpace}}GB<p>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <p>Price: {{vm.price}} cents per minute<p>\\n        </mat-list-item>\\n      </mat-list>\\n\\n      <a>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteVM()\\\">Delete</button>\\n      </a>\\n      <a>\\n        <button *ngIf=\\\"vm.type != 'Ultra Large'\\\" mat-raised-button color=\\\"primary\\\" (click) = \\\"upgradeVM()\\\">Upgrade</button>\\n      </a>\\n      <button *ngIf=\\\"vm.type == 'Ultra Large'\\\" mat-raised-button color=\\\"primary\\\" disabled>Upgrade</button>\\n      <a>\\n        <button *ngIf=\\\"vm.type != 'Basic'\\\" mat-raised-button color=\\\"accent\\\" (click) = \\\"downgradeVM()\\\">Downgrade</button>\\n      </a>\\n      <button *ngIf=\\\"vm.type == 'Basic'\\\" mat-raised-button color=\\\"accent\\\" disabled>Downgrade</button>\\n\\n      <a>\\n        <button *ngIf=\\\"vm.status!=true\\\" mat-stroked-button color=\\\"primary\\\" (click) = \\\"startVM()\\\">Start</button>\\n      </a>\\n      <button *ngIf=\\\"vm.status==true\\\" mat-stroked-button color=\\\"warn\\\" (click) =\\\"stopVM()\\\">Stop</button>\\n\\n      <a [routerLink]=\\\"['/usage', vm._id]\\\">\\n        <button mat-raised-button>Usage</button>\\n      </a>\\n    </mat-card-content>\\n  </mat-card>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatSnackBar} from '@angular/material';\nimport { Router } from '@angular/router';\n\nimport { VMService } from '@services/vm.service';\nimport { VM } from '@models/VM';\n\n@Component({\n  selector: 'app-view-vm',\n  templateUrl: './view-vm.component.html',\n  styleUrls: ['./view-vm.component.css']\n})\nexport class ViewVmComponent implements OnInit {\n  private vm: VM;\n  public id: string;\n  public loading: boolean;\n\n  constructor(private route: ActivatedRoute, public vmService: VMService, private snackBar: MatSnackBar, private router: Router) {\n    this.id = '';\n    this.vm = null;\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.vmService.getVM(this.id).then(vm => {\n        this.vm = vm;\n        this.loading = false;\n      });\n    });\n  }\n\n  deleteVM() {\n    this.vmService.deleteVM(this.id).then((res) => {\n      this.snackBar.open(\"VM Deleted Successfully.\", '', {duration: 1000});\n      this.router.navigate(['/dashboard']);\n    }).catch(err => {\n      this.snackBar.open(\"Error. VM Deletion Failed.\", '', {duration: 1000});\n    });\n  }\n\n  upgradeVM(){\n    this.vmService.upgradeVM(this.id).then((vm) => {\n      this.snackBar.open(\"VM Upgraded Successfully.\", '', {duration: 1000});\n      this.vm = vm;\n    }).catch(err => {\n      this.snackBar.open(\"Error. VM Upgrade Failed.\", '', {duration: 1000});\n    });\n  }\n\n  downgradeVM(){\n    this.vmService.downgradeVM(this.id).then((vm) => {\n      this.snackBar.open(\"VM Downgraded Successfully.\", '', {duration: 1000});\n      this.vm = vm;\n    }).catch(err => {\n      this.snackBar.open(\"Error. VM Downgrade Failed.\", '', {duration: 1000});\n    });\n  }\n\n\n  startVM(){\n    this.vmService.startVM(this.id).then((vm) => {\n      this.snackBar.open(\"VM started Successfully.\", '', {duration: 1000});\n      this.vm = vm;\n    }).catch(err => {\n      this.snackBar.open(\"Error. VM start Failed.\", '', {duration: 1000});\n    });\n  }\n\n  stopVM(){\n    this.vmService.stopVM(this.id).then((vm) => {\n      this.snackBar.open(\"VM stopped Successfully.\", '', {duration: 1000});\n      this.vm = vm;\n    }).catch(err => {\n      this.snackBar.open(\"Error. VM stop Failed.\", '', {duration: 1000});\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}